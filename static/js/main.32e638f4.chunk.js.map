{"version":3,"sources":["components/templates/Header.jsx","components/templates/Main.jsx","components/home/Home.jsx","components/users/api.js","components/checkbox/Checkbox.js","components/users/UserCrud.jsx","components/users/AlteraCanal.jsx","components/users/PPOE.jsx","components/users/OnOffONU.jsx","components/users/ListaONUs.jsx","components/users/ListaComandos.jsx","components/users/ContratosCpf.jsx","main/Routes.jsx","components/templates/Logo.jsx","components/templates/Nav.jsx","components/templates/Footer.jsx","serviceWorker.js","index.js","main/App.jsx","assets/imgs/logoviareal.png"],"names":["templates_Header","props","react_default","a","createElement","className","concat","icon","title","subtitle","templates_Main","Fragment","children","headerProps","initialState","show","Home","state","validacaoLogin","_callee","usuario","senha","regenerator_default","wrap","_context","prev","next","document","getElementById","value","_this","handleClose","handleShow","stop","this","setState","_this2","type","id","placeholder","Modal","onHide","onClick","e","clear","renderLogin","Component","api","axios","create","baseURL","Checkbox","_ref","label","isSelected","onCheckboxChange","name","checked","onChange","baseUrl","user","datahora","comando","envio","resultado","list","meumac","meussid","titlePopup","textPopup","selecao","selectSSID","selectSenha","selectCanal","UserCrud","trocarSSID","valorssid","valorsenha","canal","valorcanal","options","selectedIndex","console","log","then","resp","data","_this3","method","url","getUpdatedList","_this4","delete","add","arguments","length","undefined","filter","u","unshift","event","Object","objectSpread","target","renderRows","map","key","_this5","checkbox_Checkbox","defaultValue","selecionarTodos","_this6","Header","closeButton","Title","Body","Footer","renderForm","renderTable","renderPopup","cpf","mac","tipoonu","novoCanal","AlteraCanal","trocarCanal","teste","_callee2","_context2","get","sent","load","remove","olt","updateField","usuarioPPOE","senhaPPOE","selectUsuario","selectVlan","PPOE","response","status","configPPOE","OnOffONU","situacao","novoSituacao","es","to","onuONOFF","ListaONUs","save","ListaComandos","endereco","onu","ContratosCpf","text","busca","Routes","react_router_es","exact","path","component","ListaONU","ListaContratos","from","templates_Logo","src","logo","alt","templates_Nav","templates_Footer","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"wTAGeA,eAAA,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,SAAAC,OAAWL,EAAMM,QADjC,IACgDN,EAAMO,OAEtDN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBJ,EAAMQ,aCJ/BC,EAAA,SAAAT,GAAK,OAChBC,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACJ,EAAWC,GACZC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVJ,EAAMW,sBCLjBC,EAAc,CAChBN,KAAM,OACNC,MAAO,YACPC,SAAU,4BAGRK,EAAe,CACjBC,MAAM,GAGWC,6MAEjBC,qBAAYH,KAEZI,oCAAiB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTN,EAAUO,SAASC,eAAe,WAAWC,MAC7CR,EAAQM,SAASC,eAAe,SAASC,MAC9B,SAAZT,GAAgC,UAAVC,EACrBS,EAAKC,cAELD,EAAKE,aANI,wBAAAR,EAAAS,SAAAd,6EAWbQ,SAASC,eAAe,WAAWC,MAAQ,GAC3CF,SAASC,eAAe,SAASC,MAAQ,yCAIzCK,KAAKC,SAAS,CAAEpB,MAAM,yCAItBmB,KAAKC,SAAS,CAAEpB,MAAM,0CAGb,IAAAqB,EAAAF,KACT,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,4BACIF,EAAAC,EAAAC,cAAA,SACIiC,KAAK,OACLhC,UAAU,eACViC,GAAG,UACHC,YAAY,qBAG5BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,uBACIF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACViC,GAAG,QACHC,YAAY,qBAG5BrC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAjB,qBAA0CH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,gBAC1CH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOzB,KAAMmB,KAAKjB,MAAMF,KAAM0B,OAAQ,kBAAML,EAAKL,gBAC7C7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uDAAjB,0CAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAU,kBAAMN,EAAKlB,mBADzB,SAKAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAIP,EAAKQ,MAAMD,KAD7B,gDAahB,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKW,sBA3EYC,6BCRnBC,EAJHC,IAAMC,OAAO,CACrBC,QAAS,sDC+BEC,EA9BE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,WAAYC,EAAtBH,EAAsBG,iBAAtB,OAEfrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,aAEEF,EAAAC,EAAAC,cAAA,SAEEiC,KAAK,WAELmB,KAAMH,EAENI,QAASH,EAETI,SAAUH,EAEVlD,UAAU,qBAIXgD,KCjBDxC,EAAc,CAChBN,KAAM,OACNC,MAAO,wBACPC,SAAU,+BAORkD,EAAU,6BACV7C,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIuB,SAAU,GAAIC,QAAS,GAAIC,MAAO,GAAIC,UAAW,IACjEC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,WAAY,GACZC,UAAW,GACXtD,MAAM,EACNuD,QAAS,mBACTC,YAAY,EACZC,aAAa,EACbC,aAAa,GAGIC,6MAEjBzD,qBAAYH,KA8EZ6D,gCAAa,SAAAxD,IAAA,IAAAyD,EAAAC,EAAAC,EAAAC,EAAA,OAAAzD,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAELkD,EAAYjD,SAASC,eAAe,QAAQC,MAC5CgD,EAAalD,SAASC,eAAe,SAASC,MAC9CiD,EAAQnD,SAASC,eAAe,SAChCmD,EAAaD,EAAME,QAAQF,EAAMG,eAAepD,MAEpDqD,QAAQC,IAAIP,GACZM,QAAQC,IAAIN,GACZK,QAAQC,IAAIJ,GAEG,KAAZH,GAA+B,KAAbC,GAAgC,KAAbE,GACpCjD,EAAKE,aACLF,EAAKK,SAAS,CACViC,WAAY,2BACZC,UAAW,yCAGfa,QAAQC,IAAI,eAIM,KAAbN,GAA+B,KAAZD,GAA+B,KAAbG,GAC1CjD,EAAKE,aACLF,EAAKK,SAAS,CACViC,WAAY,0BACZC,UAAW,yCAGfa,QAAQC,IAAI,gBAGM,KAAbN,GAA+B,KAAZD,GAA+B,KAAbG,GAC1CjD,EAAKE,aACLF,EAAKK,SAAS,CACViC,WAAY,2BACZC,UAAW,yCAGfa,QAAQC,IAAI,gBAIM,KAAbN,GAA+B,KAAZD,GAA+B,KAAbG,GACxB,KAAbF,GAA+B,KAAZD,GAA+B,KAAbG,GACxB,KAAbF,GAA+B,KAAZD,GAA+B,KAAbG,GACxB,KAAbF,GAA+B,KAAZD,GAA+B,KAAbG,GAC1CjD,EAAKE,aACLF,EAAKK,SAAS,CACViC,WAAY,0CACZC,UAAW,qDAMfvC,EAAKK,SAAS,CACViC,WAAY,0CACZC,UAAW,mFAEfvC,EAAKE,cA5DA,wBAAAR,EAAAS,SAAAd,0FA5EQ,IAAAiB,EAAAF,KACjBc,IAAMW,GAASyB,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,mDAiBL,qBAAvBpD,KAAKjB,MAAMqD,QACVpC,KAAKC,SAAS,CACVoC,YAAY,EACZC,aAAa,EACbC,aAAa,EACbH,QAAS,iBAGbpC,KAAKC,SAAS,CACVoC,YAAY,EACZC,aAAa,EACbC,aAAa,EACbH,QAAS,2DAOjBpC,KAAKC,SAAS,CAAEpB,MAAM,IACO,6BAA1BmB,KAAKjB,MAAMmD,YAAgE,gCAAzBlC,KAAKjB,MAAMoD,WAC5DnC,KAAKC,SAAS,CACVkC,UAAW,gCAEfnC,KAAKF,cAC0B,4BAA1BE,KAAKjB,MAAMmD,YAA+D,+BAAzBlC,KAAKjB,MAAMoD,WACjEnC,KAAKC,SAAS,CACVkC,UAAW,+BAEfnC,KAAKF,cAELE,KAAKC,SAAS,CACVkC,UAAW,GACXD,WAAY,0CAMpBlC,KAAKC,SAAS,CAAEpB,MAAM,oCAoFtBmB,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAAaqD,EAAb,KAAArD,OAAwBsD,EAAKtB,IAAOqB,EAChDX,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OAAgBqD,EAAhB,KAAArD,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAEvD,OADGuD,GAAK5B,EAAKkC,QAAQvC,GACdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yBAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAOlB,OAAOtE,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKC,UACV3D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKE,SACV5D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKG,OACV7D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKI,mDAMd,IAAA2C,EAAAzE,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,MACHC,YAAY,sBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,MACHC,YAAY,sBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,WACHC,YAAY,4BAI5BrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,OACHC,YAAY,uBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,UAAUgB,WAAYpB,KAAKjB,MAAMsD,cAE9CrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,QACHC,YAAY,wBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,WAAWgB,WAAYpB,KAAKjB,MAAMuD,eAEnDtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACIF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,sBACViC,GAAG,SACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,+BACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,4BAIpB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,WAAWgB,WAAYpB,KAAKjB,MAAMwD,gBAGvDvE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAIgE,EAAKhC,WAAWhC,KADlC,0BAKAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,kBAAMiE,EAAKG,oBACnB5E,KAAKjB,MAAMqD,kDAQvB,IAAAyC,EAAA7E,KACT,OACIhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOzB,KAAMmB,KAAKjB,MAAMF,KAAM0B,OAAQ,kBAAMsE,EAAKhF,gBAC7C7B,EAAAC,EAAAC,cAACoC,EAAA,EAAMwE,OAAP,CAAcC,aAAW,GACrB/G,EAAAC,EAAAC,cAACoC,EAAA,EAAM0E,MAAP,KAAchF,KAAKjB,MAAMmD,WAAzB,MAEJlE,EAAAC,EAAAC,cAACoC,EAAA,EAAM2E,KAAP,SAAcjF,KAAKjB,MAAMoD,UAAzB,KACAnE,EAAAC,EAAAC,cAACoC,EAAA,EAAM4E,OAAP,KACIlH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBqC,QAAS,kBAAMqE,EAAKhF,gBAA/D,QAGA7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBqC,QAAS,kBAAMqE,EAAKhF,gBAA7D,yCAiBZ,OACI7B,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKmF,aACLnF,KAAKoF,cACLpF,KAAKqF,sBAnWgBzE,aC3BhCjC,EAAc,CAChBN,KAAM,OACNC,MAAO,wBACPC,SAAU,qDAYRK,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIkF,IAAK,GAAIC,IAAK,GAAIC,QAAS,IAC3CzD,KAAM,GACN0D,UAAW,IAGMC,6MAEjB3G,qBAAYH,KAQZ+G,iCAAc,SAAA1G,IAAA,IAAA2D,EAAAC,EAAA,OAAAzD,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAENoD,EAAQnD,SAASC,eAAe,SAChCmD,EAAaD,EAAME,QAAQF,EAAMG,eAAepD,MACpDqD,QAAQC,IAAIJ,GAJF,wBAAAvD,EAAAS,SAAAd,QAmBd2G,2BAAQ,SAAAC,IAAA,IAAA1C,EAAA,OAAA/D,EAAAnB,EAAAoB,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cAAAsG,EAAAtG,KAAA,EACaqB,EAAIkF,MADjB,OACA5C,EADA2C,EAAAE,KAGJhD,QAAQC,IAAIE,EAAKC,MAHb,wBAAA0C,EAAA/F,SAAA8F,0FAzBa,IAAA3F,EAAAF,KACjBc,IAZQ,6BAYOoC,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,yCAsC/BpD,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAzDJ,4BAyDI,KAAAA,OAAwBsD,EAAKtB,IAzDjC,4BA0DRU,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OAtEQ,4BAsER,KAAAA,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAMd,IAAAG,EAAAzE,KACR,OAAOA,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAK4D,KACVtH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK6D,KACVvH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK8D,SACVxH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,kBAAMiE,EAAKwB,KAAKvE,KACzB1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdqC,QAAS,kBAAMiE,EAAKyB,OAAOxE,KAC3B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA0G,EAAA7E,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACViC,GAAG,MACHC,YAAY,6BAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACVmD,KAAK,MACL3B,MAAOK,KAAKjB,MAAM2C,KAAKyE,IACvB3E,SAAU,SAAAf,GAAC,OAAIoE,EAAKuB,YAAY3F,IAChCJ,YAAY,uBAI5BrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,eACViC,GAAG,SACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,+BACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,wBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,yBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,6BAKpB3B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,kBAAMqE,EAAKc,gBADxB,2BAKA3H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAIoE,EAAKnE,MAAMD,KAD7B,gDAWZ,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKmF,aACLnF,KAAKoF,sBAzMmBxE,aCpBnCjC,EAAc,CAChBN,KAAM,OACNC,MAAO,0BACPC,SAAU,4DAWRkD,EAAU,6BACV7C,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIuB,SAAU,GAAIC,QAAS,GAAIC,MAAO,GAAIC,UAAW,IACjEC,KAAM,GACNsE,YAAa,GACbC,UAAW,GACXlE,QAAS,mBACTmE,eAAe,EACfjE,aAAa,EACbkE,YAAY,GAGKC,6MAEjB1H,qBAAYH,uFAES,IAAAsB,EAAAF,KACjBc,IAAMW,GAASyB,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,mDAKL,qBAAvBpD,KAAKjB,MAAMqD,QACVpC,KAAKC,SAAS,CACVsG,eAAe,EACfjE,aAAa,EACbkE,YAAY,EACZpE,QAAS,iBAGbpC,KAAKC,SAAS,CACVsG,eAAe,EACfjE,aAAa,EACbkE,YAAY,EACZpE,QAAS,wDAMVV,EAAMxC,EAASC,GACtB2B,IAAMiF,IAAN,iEAAA3H,OAA2EsD,EAAK6D,IAAhF,KAAAnH,OAAuFc,EAAvF,KAAAd,OAAkGe,IAC7F+D,KAAK,SAASwD,GACX1D,QAAQC,IAAIyD,EAAStD,MACrBJ,QAAQC,IAAIyD,EAASC,0CAa7B3G,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAAaqD,EAAb,KAAArD,OAAwBsD,EAAKtB,IAAOqB,EAChDX,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OAAgBqD,EAAhB,KAAArD,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yBAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDA4EtB,OAAOtE,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKC,UACV3D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKE,SACV5D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKG,OACV7D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKI,mDAMd,IAAA2C,EAAAzE,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,MACHC,YAAY,sBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,MACHC,YAAY,sBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,WACHC,YAAY,4BAI5BrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,cACHC,YAAY,6BAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,aAAagB,WAAYpB,KAAKjB,MAAMwH,iBAEjDvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,YACHC,YAAY,wBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,WAAWgB,WAAYpB,KAAKjB,MAAMuD,eAEnDtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,sBACViC,GAAG,OACHC,YAAY,uBAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwG,EAAD,CAAUtE,GAAG,UAAUgB,WAAYpB,KAAKjB,MAAMyH,eAGtDxI,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAIgE,EAAKmC,WAAWnG,EAAGgE,EAAK1F,MAAM2C,KAAM+C,EAAK1F,MAAMsH,YAAa5B,EAAK1F,MAAMuH,aADzF,0BAKAtI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,kBAAMiE,EAAKG,oBACnB5E,KAAKjB,MAAMqD,6CAS5B,OACIpE,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKmF,aACLnF,KAAKoF,sBA3RYxE,aC1B5BjC,EAAc,CAChBN,KAAM,OACNC,MAAO,wBACPC,SAAU,+BAYRK,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIkF,IAAK,GAAIC,IAAK,GAAIC,QAAS,IAC3CzD,KAAM,GACN0D,UAAW,IAGMoB,6MAEjB9H,qBAAYH,KAiBZgH,2BAAQ,SAAA3G,IAAA,IAAAkE,EAAA,OAAA/D,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACaqB,EAAIkF,MAAM7C,KAAK,SAASwD,GACrC1G,KAAKC,SAAS,CAAC8B,KAAM2E,EAAStD,SAF9B,OACAD,EADA7D,EAAA0G,KAIJhD,QAAQC,IAAIE,EAAKC,MAJb,wBAAA9D,EAAAS,SAAAd,0FAfa,IAAAiB,EAAAF,KACjBc,IAZQ,6BAYOoC,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,0CAI1B1B,EAAKoF,GACV,IAAIC,EAAeD,EAAShE,QAAQgE,EAAS/D,eAAepD,MAC5DkB,EAAIkF,IAAJ,kEAAA3H,OAA0EsD,EAAK6D,IAA/E,KAAAnH,OAAsF2I,IACjF7D,KAAK,SAASwD,GACX1D,QAAQC,IAAIyD,EAAStD,MACrBJ,QAAQC,IAAIyD,EAASC,0CAoB7B3G,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAhDJ,4BAgDI,KAAAA,OAAwBsD,EAAKtB,IAhDjC,4BAiDRU,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OA7DQ,4BA6DR,KAAAA,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAMd,IAAAG,EAAAzE,KACR,OAAOA,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAK4D,KACVtH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK6D,KACVvH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK8D,SACVxH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,KACLjJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,kBAAMiE,EAAKwB,KAAKvE,KACzB1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAGrBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdqC,QAAS,kBAAMiE,EAAKyB,OAAOxE,KAC3B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA0G,EAAA7E,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACVmD,KAAK,MACL3B,MAAOK,KAAKjB,MAAM2C,KAAK6D,IACvB/D,SAAU,SAAAf,GAAC,OAAIoE,EAAKuB,YAAY3F,IAChCJ,YAAY,6BAGxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACVmD,KAAK,MACL3B,MAAOK,KAAKjB,MAAM2C,KAAKyE,IACvB3E,SAAU,SAAAf,GAAC,OAAIoE,EAAKuB,YAAY3F,IAChCJ,YAAY,uBAI5BrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,eACViC,GAAG,gBACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,qCACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,cAAd,gBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,gBAAd,sBAKpB3B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAIoE,EAAKqC,SAASzG,EAAEoE,EAAK9F,MAAM2C,KAAKjC,SAASC,eAAe,mBAD1E,2BAKA1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAIoE,EAAKnE,MAAMD,KAD7B,gDAWZ,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKmF,aACLnF,KAAKoF,sBAzLgBxE,aCrBhCjC,EAAc,CAChBN,KAAM,OACNC,MAAO,wBACPC,SAAU,kBAQRK,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIkF,IAAK,GAAIC,IAAK,GAAIC,QAAS,IAC3CzD,KAAM,IAGWoF,6MAEjBpI,qBAAYH,KAiCZgH,2BAAQ,SAAA3G,IAAA,IAAAkE,EAAA,OAAA/D,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACaqB,EAAIkF,MAAM7C,KAAK,SAASwD,GACrC1G,KAAKC,SAAS,CAAC8B,KAAM2E,EAAStD,SAF9B,OACAD,EADA7D,EAAA0G,KAIJhD,QAAQC,IAAIE,EAAKC,MAJb,wBAAA9D,EAAAS,SAAAd,0FAfa,IAAAiB,EAAAF,KACjBc,IA3BQ,6BA2BOoC,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,0CAI1B1B,EAAKoF,GACV,IAAIC,EAAeD,EAAShE,QAAQgE,EAAS/D,eAAepD,MAC5DkB,EAAIkF,IAAJ,kEAAA3H,OAA0EsD,EAAK6D,IAA/E,KAAAnH,OAAsF2I,IACjF7D,KAAK,SAASwD,GACX1D,QAAQC,IAAIyD,EAAStD,MACrBJ,QAAQC,IAAIyD,EAASC,0CAY7B3G,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAvDJ,4BAuDI,KAAAA,OAAwBsD,EAAKtB,IAvDjC,4BAwDRU,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OApEQ,4BAoER,KAAAA,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAMd,IAAAG,EAAAzE,KACR,OAAOA,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAK4D,KACVtH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK6D,KACVvH,EAAAC,EAAAC,cAAA,UAAKwD,EAAK8D,SACVxH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,kBAAMiE,EAAKwB,KAAKvE,KACzB1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAEjBH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,UACTjJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAGdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAGjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdqC,QAAS,kBAAMiE,EAAKyB,OAAOxE,KAC3B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA0G,EAAA7E,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,eACViC,GAAG,eACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,6BACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,gBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,gBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,gBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,gBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,mBAIhB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,eACViC,GAAG,OACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,wBACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,kBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,kBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,kBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,kBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,sBAKpB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAIoE,EAAKuC,KAAK3G,KAD5B,aAIAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAIoE,EAAKnE,MAAMD,KAD7B,gDAWZ,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACNqB,KAAKmF,aACLnF,KAAKoF,sBA1LkBxE,aChBjCjC,EAAc,CAChBN,KAAM,OACNC,MAAO,qCACPC,SAAU,gCAQRK,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIuB,SAAU,GAAIC,QAAS,GAAIC,MAAO,GAAIC,UAAW,GAAI5C,QAAS,IAC9E6C,KAAM,IAGWsF,6MAEjBtI,qBAAYH,KAiBZgH,2BAAQ,SAAA3G,IAAA,IAAAkE,EAAA,OAAA/D,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACaqB,EAAIkF,MAAM7C,KAAK,SAASwD,GACrC1G,KAAKC,SAAS,CAAC8B,KAAM2E,EAAStD,SAF9B,OACAD,EADA7D,EAAA0G,KAIJhD,QAAQC,IAAIE,EAAKC,MAJb,wBAAA9D,EAAAS,SAAAd,0FAfa,IAAAiB,EAAAF,KACjBc,IAXQ,8BAWOoC,KAAK,SAAAC,GAChBjD,EAAKD,SAAS,CAAE8B,KAAMoB,EAAKC,0CAI1B1B,EAAKoF,GACV,IAAIC,EAAeD,EAAShE,QAAQgE,EAAS/D,eAAepD,MAC5DkB,EAAIkF,IAAJ,kEAAA3H,OAA0EsD,EAAK6D,IAA/E,KAAAnH,OAAsF2I,IACjF7D,KAAK,SAASwD,GACX1D,QAAQC,IAAIyD,EAAStD,MACrBJ,QAAQC,IAAIyD,EAASC,0CAY7B3G,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAGhC,IAAA2B,EAAArD,KACG0B,EAAO1B,KAAKjB,MAAM2C,KAClB4B,EAAS5B,EAAKtB,GAAK,MAAQ,OAC3BmD,EAAM7B,EAAKtB,GAAL,GAAAhC,OAvCJ,6BAuCI,KAAAA,OAAwBsD,EAAKtB,IAvCjC,6BAwCRU,IAAMwC,GAASC,EAAK7B,GACfwB,KAAK,SAAAC,GACF,IAAMpB,EAAOsB,EAAKG,eAAeL,EAAKC,MACtCC,EAAKpD,SAAS,CAAEyB,KAAM9C,EAAa8C,KAAMK,wCAIhDL,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,GAAK,IAAA+B,EAAAzD,KACRc,IAAM4C,OAAN,GAAAtF,OApDQ,6BAoDR,KAAAA,OAA2BsD,EAAKtB,KAAM8C,KAAK,SAAAC,GACvC,IAAMpB,EAAO0B,EAAKD,eAAe9B,GAAM,GAEvC+B,EAAKxD,SAAS,CAAE8B,kDAITL,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAOtB,OAAOtE,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACNpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKC,UACV3D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKE,SACV5D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKG,OACV7D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKI,WACV9D,EAAAC,EAAAC,cAAA,UAAKwD,EAAKxC,iDAMlB,IAAAuF,EAAAzE,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,OACThC,UAAU,eACViC,GAAG,YACCpC,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,GAAGgF,cAAY,GAA7B,+BACA3G,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,oBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,oBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,sBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,oBACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,aAAd,uBAIhB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACViC,GAAG,cACHC,YAAY,+BAIxBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACViC,GAAG,YACHC,YAAY,8BAK5BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAIgE,EAAK2C,KAAK3G,KAD5B,aAIAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAIgE,EAAK/D,MAAMD,KAD7B,gDAWZ,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACNqB,KAAKmF,aACLnF,KAAKoF,sBAjKsBxE,aCjBrCjC,EAAc,CAChBN,KAAM,OACNC,MAAO,6BACPC,SAAU,+BAYRK,EAAe,CACjB8C,KAAM,CAAEtB,GAAI,GAAIkH,SAAU,GAAIC,IAAK,IACnCxF,KAAM,IAGWyF,6MAEjBzI,qBAAYH,wHASRoB,KAAKC,SAAS,CAAEyB,KAAM9C,EAAa8C,sCAItB1B,KAAKjB,MAAM2C,KACJtB,mCAWX,KADCX,SAASC,eAAe,OAAOC,OAErCK,KAAKC,SAAS,CACV8B,KAAM,CAAC,CAAE3B,GAAI,EAAGkH,SAAU,UAAWC,IAAK,eAC1C,CAAEnH,GAAI,EAAGkH,SAAU,UAAWC,IAAK,eACnC,CAAEnH,GAAI,EAAGkH,SAAU,eAAgBC,IAAK,+CAO/C7F,GACD1B,KAAKC,SAAU,CAAEyB,wCAGdA,2CAQQA,GAAe,IAATiC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpB7B,EAAO/B,KAAKjB,MAAMgD,KAAKgC,OAAO,SAAAC,GAAC,OAAIA,EAAE5D,KAAOsB,EAAKtB,KAGvD,OAFGuD,GAAK5B,EAAKkC,QAAQvC,GAEdK,sCAGCmC,GACR,IAAMxC,EAAIyC,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,KAAKjB,MAAM2C,MAC7BA,EAAKwC,EAAMG,OAAO/C,MAAQ4C,EAAMG,OAAO1E,MACvCK,KAAKC,SAAS,CAAEyB,+CAIhB,OACI1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACK8B,KAAKsE,oDAMd,IAAApE,EAAAF,KACR,OAAOA,KAAKjB,MAAMgD,KAAKwC,IAAK,SAAA7C,GACxB,OACI1D,EAAAC,EAAAC,cAAA,MAAIsG,IAAK9C,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAKtB,IACVpC,EAAAC,EAAAC,cAAA,UAAKwD,EAAK4F,UACVtJ,EAAAC,EAAAC,cAAA,UAAKwD,EAAK6F,KACVvJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,kBAAMN,EAAK+F,KAAKvE,KACzB1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBsJ,KAAK,kBAEtCzJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdqC,QAAS,kBAAMN,EAAKgG,OAAOxE,KAC3B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAAkF,EAAArD,KACR,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OACRhC,UAAU,eACViC,GAAG,MACHC,YAAY,uBAI5BrC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdqC,QAAS,SAAAC,GAAC,OAAI4C,EAAKqE,MAAMjH,KAD7B,aAIAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdqC,QAAS,SAAAC,GAAC,OAAI4C,EAAK3C,MAAMD,KAD7B,8CAWZ,OACIzC,EAAAC,EAAAC,cAACM,EAASG,EACLqB,KAAKmF,aACLnF,KAAKoF,sBA3IoBxE,aCd3B+G,EAAA,SAAA5J,GAAK,OAChBC,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjJ,IACjCd,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWvF,IAChCxE,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWrC,IAChC1H,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWtB,IAC/BzI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWlB,IAChC7I,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnChK,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWV,IACxCrJ,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAWE,IACzCjK,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUM,KAAK,IAAIjB,GAAG,kCChBfkB,GAAA,SAAApK,GAAK,OAChBC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QACTH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,IAAI9I,UAAU,QACvBH,EAAAC,EAAAC,cAAA,OAAKkK,IAAKC,IAAMC,IAAI,YCJjBC,WAAA,SAAAxK,GAAK,OAChBC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,KACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,sBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,aACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,kBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,kBACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,sBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,UACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,qBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,UACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,kBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,SACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,4BAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,mBACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,uBAGAH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAG,UACLjJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBADjB,gCCzBGqK,WAAA,SAAAzK,GAAK,OAChBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,gCACqBF,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cCMlBsK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/K,EAAAC,EAAAC,cCMD,SAAAH,GAAK,OAChBC,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiK,GAAD,MACAnK,EAAAC,EAAAC,cAACqK,GAAD,MACAvK,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAACsK,GAAD,SDZI,MAAS/I,SAASC,eAAe,SD2H3C,kBAAmBsJ,WACrBA,UAAUC,cAAcC,MAAMhG,KAAK,SAAAiG,GACjCA,EAAaC,mCGnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.32e638f4.chunk.js","sourcesContent":["import './Header.css'\r\nimport React from 'react';\r\n\r\nexport default props =>\r\n    <header className=\"header d-none d-sm-flex flex-column\">\r\n        <h1 className=\"mt-3\">\r\n            <i className={`fa fa-${props.icon}`} ></i> {props.title}\r\n        </h1>\r\n        <p className=\"lead text-muted\">{props.subtitle}</p>\r\n    </header>","import './Main.css'\r\nimport React from 'react';\r\nimport Header from './Header'\r\n\r\nexport default props =>\r\n    <React.Fragment>\r\n        <Header {...props} />\r\n        <main className=\"content container-fluid\">\r\n            <div className=\"p-3 mt-3\">\r\n                {props.children}\r\n            </div>\r\n        </main>\r\n    </React.Fragment>","import React, { Component } from 'react';\r\nimport Main from '../templates/Main';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst headerProps = {\r\n    icon: \"home\",\r\n    title: \"Início\",\r\n    subtitle: \"Tela de login do sistema\"\r\n}\r\n\r\nconst initialState = {\r\n    show: false\r\n}\r\n\r\nexport default class Home extends Component{\r\n\r\n    state = {...initialState}\r\n\r\n    validacaoLogin = async () => {\r\n        var usuario = document.getElementById('usuario').value\r\n        var senha = document.getElementById('senha').value\r\n        if(usuario === '1234' && senha === 'senha'){\r\n            this.handleClose()\r\n        }else{\r\n            this.handleShow()\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        document.getElementById('usuario').value = \"\"\r\n        document.getElementById('senha').value = \"\"\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false});\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    } \r\n\r\n    renderLogin(){\r\n        return(\r\n            <div className=\"form\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <label>Usuário:</label>\r\n                            <input \r\n                                type=\"text\"  \r\n                                className=\"form-control\" \r\n                                id=\"usuario\"\r\n                                placeholder=\"Digite seu CPF\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <label>Senha:</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"senha\"\r\n                                placeholder=\"Digite a senha\" />\r\n                    </div>\r\n                </div>\r\n                <label className=\"mt-3\">Esqueceu a senha? <label className=\"text-danger\">Clique aqui</label></label>\r\n                <Modal show={this.state.show} onHide={() => this.handleClose()}>\r\n                    <label className=\"text-danger mt-4 mb-4 d-flex justify-content-center\"> Usuário e/ou senha incorreto(s). </label>\r\n                </Modal>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick= {() => this.validacaoLogin()}\r\n                            >\r\n                            Login\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={e => this.clear(e)}\r\n                            >\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderLogin()}\r\n            </Main>\r\n        )\r\n    }  \r\n}","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://192.168.2.2:8080/TesteWebservice/onuconfig'\r\n});\r\n\r\nexport default api;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n\r\n  <div className=\"form-check\">\r\n\r\n    <label>\r\n\r\n      <input\r\n\r\n        type=\"checkbox\"\r\n\r\n        name={label}\r\n\r\n        checked={isSelected}\r\n\r\n        onChange={onCheckboxChange}\r\n\r\n        className=\"form-check-input\"\r\n\r\n      />\r\n\r\n      {label}\r\n\r\n    </label>\r\n\r\n  </div>\r\n\r\n);\r\n\r\n\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport axios from 'axios'\r\nimport api from '../users/api.js'\r\nimport { Modal } from 'react-bootstrap'\r\nimport Checkbox from '../checkbox/Checkbox';\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Altera SSID, senha e canal.'\r\n}\r\n\r\n/* \r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3002/user'\r\nconst initialState = {\r\n    user: { id: '', datahora: '', comando: '', envio: '', resultado: ''},\r\n    list: [],\r\n    meumac: '',\r\n    meussid: '',\r\n    titlePopup: '',\r\n    textPopup: '',\r\n    show: false,\r\n    selecao: 'Selecionar todos',\r\n    selectSSID: false,\r\n    selectSenha: false,\r\n    selectCanal: false\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        });\r\n    }\r\n\r\n    /*contagemtempo(t){\r\n        var tempo = t;\r\n        while(tempo>0){\r\n            var intervalo = window.setInterval(lerolero, 1000);\r\n            function lerolero() {\r\n                this.state.textPopup = tempo;\r\n            }\r\n            tempo--;\r\n        }\r\n        clearInterval(intervalo);\r\n    }*/\r\n\r\n    selecionarTodos() {\r\n        if(this.state.selecao === \"Selecionar todos\"){\r\n            this.setState({\r\n                selectSSID: true,\r\n                selectSenha: true,\r\n                selectCanal: true,\r\n                selecao: \"Limpar todos\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                selectSSID: false,\r\n                selectSenha: false,\r\n                selectCanal: false,\r\n                selecao: \"Selecionar todos\"\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false});\r\n        if(this.state.titlePopup === \"Alteração de Senha\" && this.state.textPopup !== \"Senha alterada com sucesso!\"){\r\n            this.setState({\r\n                textPopup: \"Senha alterada com sucesso!\"\r\n            })\r\n            this.handleShow();\r\n        }else if(this.state.titlePopup === \"Alteração de SSID\" && this.state.textPopup !== \"SSID alterado com sucesso!\"){\r\n            this.setState({\r\n                textPopup: \"SSID alterado com sucesso!\"\r\n            })\r\n            this.handleShow();\r\n        }else{\r\n            this.setState({\r\n                textPopup: '',\r\n                titlePopup: ''\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleShow() {\r\n        this.setState({ show: true });\r\n\r\n    } \r\n\r\n    /*contagemtempo(tempo){\r\n        this.setState({\r\n            seconds: tempo\r\n        });\r\n        var i = 10;\r\n        for(i=10;i>0;i++){\r\n            this.setState({\r\n                seconds: this.state.seconds - 1\r\n            });\r\n        }\r\n    }*/\r\n\r\n    //macteste= 78:30:3b:8f:60:3e\r\n   \r\n    trocarSSID = async () => {\r\n        //var valormac = document.getElementById('mac').value\r\n        var valorssid = document.getElementById('ssid').value\r\n        var valorsenha = document.getElementById('senha').value\r\n        let canal = document.getElementById('canal')\r\n        let valorcanal = canal.options[canal.selectedIndex].value;\r\n        //console.log(valormac);\r\n        console.log(valorssid);\r\n        console.log(valorsenha);\r\n        console.log(valorcanal);\r\n        //if(valorssid===\"\" && valorsenha!==\"\" && valormac!==\"\"){\r\n        if(valorssid===\"\" && valorsenha!==\"\" && valorcanal===\"\"){\r\n            this.handleShow()\r\n            this.setState({\r\n                titlePopup: \"Alteração de Senha\",\r\n                textPopup: \"Requisição enviada com sucesso\"\r\n            })\r\n            \r\n            console.log(\"ssid vazio\")\r\n            //var respostaSenha = await api.get('/trocarsenha/' + valormac + '/' + valorsenha)\r\n            \r\n        //}else if(valorsenha===\"\" && valorssid!==\"\" && valormac!==\"\"){\r\n        }else if(valorsenha===\"\" && valorssid!==\"\" && valorcanal===\"\"){\r\n            this.handleShow()\r\n            this.setState({\r\n                titlePopup: \"Alteração de SSID\",\r\n                textPopup: \"Requisição enviada com sucesso\"\r\n            })\r\n            \r\n            console.log(\"senha vazia\")\r\n            //var respostaSsid = await api.get('/trocarssid/' + valormac + '/' + valorssid)\r\n\r\n        }else if(valorsenha===\"\" && valorssid===\"\" && valorcanal!==\"\"){\r\n            this.handleShow()\r\n            this.setState({\r\n                titlePopup: \"Alteração de Canal\",\r\n                textPopup: \"Requisição enviada com sucesso\"\r\n            })\r\n            \r\n            console.log(\"senha vazia\")\r\n            //var respostaSsid = await api.get('/trocarssid/' + valormac + '/' + valorssid)\r\n\r\n        }else if( \r\n                (valorsenha!==\"\" && valorssid!==\"\" && valorcanal!==\"\") ||\r\n                (valorsenha!==\"\" && valorssid!==\"\" && valorcanal===\"\") ||\r\n                (valorsenha!==\"\" && valorssid===\"\" && valorcanal!==\"\") ||\r\n                (valorsenha===\"\" && valorssid!==\"\" && valorcanal!==\"\") ){\r\n            this.handleShow()\r\n            this.setState({\r\n                titlePopup: \"Alterações de SSID, senha e canal\",\r\n                textPopup: \"Favor enviar uma requisição de cada vez.\"\r\n            })\r\n        \r\n            //var respostaSsid = await api.get('/trocarssid/' + valormac + '/' + valorssid)\r\n\r\n        }else{\r\n            this.setState({\r\n                titlePopup: \"Alteração de SSID, senha ou canal\",\r\n                textPopup: \"Campos SSID, senha ou sanal vazios, favor preencher os campos obrigatórios.\"\r\n            })\r\n            this.handleShow()\r\n        }\r\n        //axios.get(`http://192.168.2.2:8080/TesteWebservice/roteador/trocarsenha/${user.mac}/${senha}`)\r\n    }\r\n    \r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Data/Hora</th>\r\n                        <th>Comando</th>\r\n                        <th>Envio</th>\r\n                        <th>Resultado</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    renderRows(){\r\n        return this.state.list.map( user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.datahora}</td>\r\n                    <td>{user.comando}</td>\r\n                    <td>{user.envio}</td>\r\n                    <td>{user.resultado}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    \r\n    renderForm(){\r\n        return (\r\n            <div className='form'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label>ONU</label>\r\n                            <input type=\"text\" \r\n                                className=\"col-12 form-control\" \r\n                                id=\"onu\"\r\n                                placeholder=\"Digite o ONU...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label>CPF</label>\r\n                            <input type=\"text\" \r\n                                className=\"col-12 form-control\" \r\n                                id=\"cpf\"\r\n                                placeholder=\"Digite o CPF...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label>Contrato</label>\r\n                            <input type=\"text\" \r\n                                className=\"col-12 form-control\" \r\n                                id=\"contrato\"\r\n                                placeholder=\"Digite o contrato...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <th>Configurar Wi-Fi</th>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label>SSID</label>\r\n                            <input type=\"text\" \r\n                                className=\"col-12 form-control\" \r\n                                id=\"ssid\"\r\n                                placeholder=\"Digite o SSID...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                    <Checkbox id=\"boxSSID\" isSelected={this.state.selectSSID}></Checkbox>\r\n                    </div>\r\n                    <div className=\"col-10 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label>Senha</label>\r\n                            <input type=\"text\" \r\n                                className=\"col-12 form-control\" \r\n                                id=\"senha\"\r\n                                placeholder=\"Digite a senha...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <Checkbox id=\"boxSenha\" isSelected={this.state.selectSenha}></Checkbox>\r\n                    </div>\r\n                    <div className=\"col-10 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label>Canal</label>\r\n                                <select type=\"text\" \r\n                                    className=\"col-12 form-control\" \r\n                                    id=\"canal\">\r\n                                        <option value=\"\" defaultValue > Selecione o novo canal... </option>\r\n                                        <option value=\"canal1\"> Canal 1: 2.412 MHz </option>\r\n                                        <option value=\"canal2\"> Canal 2: 2.417 MHz </option>\r\n                                        <option value=\"canal3\"> Canal 3: 2.422 MHz </option>\r\n                                        <option value=\"canal4\"> Canal 4: 2.427 MHz </option>\r\n                                        <option value=\"canal5\"> Canal 5: 2.432 MHz </option>\r\n                                        <option value=\"canal6\"> Canal 6: 2.437 MHz </option>\r\n                                        <option value=\"canal7\"> Canal 7: 2.442 MHz </option>\r\n                                        <option value=\"canal8\"> Canal 8: 2.447 MHz </option>\r\n                                        <option value=\"canal9\"> Canal 9: 2.452 MHz </option>\r\n                                        <option value=\"canal10\"> Canal 10: 2.457 MHz </option>\r\n                                        <option value=\"canal11\"> Canal 11: 2.462 MHz </option>\r\n                                        <option value=\"canal12\"> Canal 12: 2.467 MHz </option>\r\n                                        <option value=\"canal13\"> Canal 13: 2.472 MHz </option>\r\n                                </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <Checkbox id=\"boxCanal\" isSelected={this.state.selectCanal}></Checkbox>\r\n                    </div>\r\n                </div>\r\n                <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={e => this.trocarSSID(e)}\r\n                            /*onClick={e => this.save(e)}*/>\r\n                            Atualizar Selecionados\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={() => this.selecionarTodos()}>\r\n                            {this.state.selecao}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    renderPopup(){\r\n        return (\r\n            <Modal show={this.state.show} onHide={() => this.handleClose()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{this.state.titlePopup} </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> {this.state.textPopup} </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary ml-2\" onClick={() => this.handleClose()}>\r\n                        Sair\r\n                    </button>\r\n                    <button className=\"btn btn-primary ml-2\" onClick={() => this.handleClose()}>\r\n                        OK\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    /*renderCronometro(){\r\n        return(\r\n            <div>\r\n                <p>{this.state.seconds} seconds remains!</p>\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n                {this.renderPopup()}\r\n            </Main>\r\n        )\r\n    }  \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api.js'\r\nimport axios from 'axios'\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Cadastro de ONUs: Inclui, Lista, Altera e Exclui.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', cpf: '', mac: '', tipoonu: ''},\r\n    list: [],\r\n    novoCanal: ''\r\n}\r\n\r\nexport default class AlteraCanal extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    trocarCanal = async () => {\r\n        //var valormac = document.getElementById('mac').value\r\n        let canal = document.getElementById('canal')\r\n        let valorcanal = canal.options[canal.selectedIndex].value;\r\n        console.log(valorcanal)\r\n        //var resposta = await api.get('/roteador/trocarsenha/' + valormac + '/' + valorcanal)\r\n        //console.log(resposta)\r\n        \r\n    }\r\n\r\n    /*trocarCanal(user,canal){\r\n        let novoCanal = canal.options[canal.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoCanal}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }*/\r\n\r\n    teste = async () => {\r\n        let resp = await api.get();\r\n        //this.setState({list: resp.data})\r\n        console.log(resp.data);\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>CPF</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>Tipo ONU</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.cpf}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.tipoonu}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-retweet\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"mac\"\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Alterar Canal</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Canal*</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"canal\">\r\n                                <option value=\"\" defaultValue > Selecione o novo canal... </option>\r\n                                <option value=\"canal1\"> Canal 1: 2.412 MHz </option>\r\n                                <option value=\"canal2\"> Canal 2: 2.417 MHz </option>\r\n                                <option value=\"canal3\"> Canal 3: 2.422 MHz </option>\r\n                                <option value=\"canal4\"> Canal 4: 2.427 MHz </option>\r\n                                <option value=\"canal5\"> Canal 5: 2.432 MHz </option>\r\n                                <option value=\"canal6\"> Canal 6: 2.437 MHz </option>\r\n                                <option value=\"canal7\"> Canal 7: 2.442 MHz </option>\r\n                                <option value=\"canal8\"> Canal 8: 2.447 MHz </option>\r\n                                <option value=\"canal9\"> Canal 9: 2.452 MHz </option>\r\n                                <option value=\"canal10\"> Canal 10: 2.457 MHz </option>\r\n                                <option value=\"canal11\"> Canal 11: 2.462 MHz </option>\r\n                                <option value=\"canal12\"> Canal 12: 2.467 MHz </option>\r\n                                <option value=\"canal13\"> Canal 13: 2.472 MHz </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={() => this.trocarCanal()}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport axios from 'axios'\r\nimport Checkbox from '../checkbox/Checkbox';\r\n\r\n\r\nconst headerProps = {\r\n    icon: 'user',\r\n    title: 'Configuração PPoE',\r\n    subtitle: 'Configurar usuário e senha PPoE. Lista e exclui ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3002/user'\r\nconst initialState = {\r\n    user: { id: '', datahora: '', comando: '', envio: '', resultado: ''},\r\n    list: [],\r\n    usuarioPPOE: '',\r\n    senhaPPOE: '',\r\n    selecao: 'Selecionar todos',\r\n    selectUsuario: false,\r\n    selectSenha: false,\r\n    selectVlan: false\r\n}\r\n\r\nexport default class PPOE extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    selecionarTodos() {\r\n        if(this.state.selecao === \"Selecionar todos\"){\r\n            this.setState({\r\n                selectUsuario: true,\r\n                selectSenha: true,\r\n                selectVlan: true,\r\n                selecao: \"Limpar todos\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                selectUsuario: false,\r\n                selectSenha: false,\r\n                selectVlan: false,\r\n                selecao: \"Selecionar todos\"\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    configPPOE(user, usuario, senha){\r\n        axios.get(`http://192.168.2.126:8080/TesteWebservice/roteador/configppoe/${user.mac}/${usuario}/${senha}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Data/Hora</th>\r\n                        <th>Comando</th>\r\n                        <th>Envio</th>\r\n                        <th>Resultado</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n/*\r\n    renderRows(){\r\n        return this.state.list.map( user => {\r\n            return (\r\n                <tr key={user.number}>\r\n                    <td>{user.number}</td>\r\n                    <td>{user.mac}</td>\r\n                    <td>{user.olt}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger ml-2\"\r\n                            onClick={() => this.remove(user)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderForm(){\r\n        return (\r\n            <div className='form'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"mac\"\r\n                                value={this.state.user.mac}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o nome...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>E-mail</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"olt\"\r\n                                value={this.state.user.olt}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o e-mail...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={e => this.save(e)}>\r\n                            Salvar\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={e => this.clear(e)}>\r\n                            Cancelar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.datahora}</td>\r\n                <td>{user.comando}</td>\r\n                <td>{user.envio}</td>\r\n                <td>{user.resultado}</td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>ONU</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"onu\"\r\n                            placeholder=\"Digite o ONU...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>CPF</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"cpf\"\r\n                            placeholder=\"Digite o CPF...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>Contrato</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"contrato\"\r\n                            placeholder=\"Digite o contrato...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Configurar usuário e senha PPoE</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-10 col-md-3\">\r\n                    <div className=\"form-group\">\r\n                        <label>Usuário</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"usuarioPPOE\"\r\n                            placeholder=\"Digite o usuário...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                <Checkbox id=\"boxUsuario\" isSelected={this.state.selectUsuario}></Checkbox>\r\n                </div>\r\n                <div className=\"col-10 col-md-3\">\r\n                    <div className=\"form-group\">\r\n                        <label>Senha</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"senhaPPOE\"\r\n                            placeholder=\"Digite a senha...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <Checkbox id=\"boxSenha\" isSelected={this.state.selectSenha}></Checkbox>\r\n                </div>\r\n                <div className=\"col-10 col-md-3\">\r\n                    <div className=\"form-group\">\r\n                        <label>VLAN</label>\r\n                        <input type=\"text\" \r\n                            className=\"col-12 form-control\" \r\n                            id=\"vlan\"\r\n                            placeholder=\"Digite o VLAN...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <Checkbox id=\"boxVlan\" isSelected={this.state.selectVlan}></Checkbox>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.configPPOE(e, this.state.user, this.state.usuarioPPOE, this.state.senhaPPOE)}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Atualizar Selecionados\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={() => this.selecionarTodos()}>\r\n                        {this.state.selecao}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Habilita e desabilita ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', cpf: '', mac: '', tipoonu: ''},\r\n    list: [],\r\n    novoCanal: ''\r\n}\r\n\r\nexport default class OnOffONU extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    onuONOFF(user,situacao){\r\n        let novoSituacao = situacao.options[situacao.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoSituacao}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    teste = async () => {\r\n        let resp = await api.get().then(function(response){\r\n            this.setState({list: response.data});\r\n        });\r\n        console.log(resp.data);\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>CPF</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>Tipo ONU</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.cpf}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.tipoonu}</td>\r\n                <td>\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-retweet\"></i>\r\n                        </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"mac\"\r\n                            value={this.state.user.mac}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite a olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Alterar Habilitado/Desabilitado</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Situação*</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"novaSituacao\">\r\n                                <option value=\"\" defaultValue > Selecione a nova opção... </option>\r\n                                <option value=\"habilitado\"> Habilitado </option>\r\n                                <option value=\"desabilitado\"> Desabilitado </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.onuONOFF(e,this.state.user,document.getElementById(\"novaSituacao\"))}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst headerProps = {\r\n    icon: 'list',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Lista de ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', cpf: '', mac: '', tipoonu: ''},\r\n    list: [],\r\n}\r\n\r\nexport default class ListaONUs extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    /*constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           macadress: this.state.user.mac,\r\n           olt: this.state.user.olt\r\n        }\r\n    }*/\r\n\r\n    /*constructor(usercrud = new UserCrud()){\r\n        this.usercrud = usercrud;\r\n    }\r\n\r\n    tryingMethod(user){\r\n        this.usercrud.load(user);\r\n    }*/\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    onuONOFF(user,situacao){\r\n        let novoSituacao = situacao.options[situacao.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoSituacao}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    teste = async () => {\r\n        let resp = await api.get().then(function(response){\r\n            this.setState({list: response.data});\r\n        });\r\n        console.log(resp.data);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>CPF</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>Tipo ONU</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.cpf}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.tipoonu}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </button>\r\n                    <Link to=\"/canal\">\r\n                    <button className=\"btn btn-style-background-green ml-2\"\r\n                        //onClick={() => this.tryingMethod(user)}\r\n                        >\r\n                        <i className=\"fa fa-key\"></i>\r\n                    </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Servidor ANM</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"servidoranm\">\r\n                                <option value=\"\" defaultValue > Selecione o servidor... </option>\r\n                                <option value=\"servidor1\"> 192.3.45.3 </option>\r\n                                <option value=\"servidor2\"> 192.3.45.4 </option>\r\n                                <option value=\"servidor3\"> 192.3.45.5 </option>\r\n                                <option value=\"servidor4\"> 192.3.45.6 </option>\r\n                                <option value=\"servidor5\"> 192.3.45.7 </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"olt\">\r\n                                <option value=\"\" defaultValue > Selecione a OLT... </option>\r\n                                <option value=\"servidor1\"> 10.71.46.107 </option>\r\n                                <option value=\"servidor2\"> 10.71.46.108 </option>\r\n                                <option value=\"servidor3\"> 10.71.46.109 </option>\r\n                                <option value=\"servidor4\"> 10.71.46.110 </option>\r\n                                <option value=\"servidor5\"> 10.71.46.111 </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.save(e)}>\r\n                        Pesquisar\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n               {this.renderForm()}\r\n               {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst headerProps = {\r\n    icon: 'list',\r\n    title: 'Gerenciamento de Requisições',\r\n    subtitle: 'Lista de comandos executados'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3002/user'\r\nconst initialState = {\r\n    user: { id: '', datahora: '', comando: '', envio: '', resultado: '', usuario: ''},\r\n    list: [],\r\n}\r\n\r\nexport default class ListaComandos extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    onuONOFF(user,situacao){\r\n        let novoSituacao = situacao.options[situacao.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoSituacao}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    teste = async () => {\r\n        let resp = await api.get().then(function(response){\r\n            this.setState({list: response.data});\r\n        });\r\n        console.log(resp.data);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Data/Hora</th>\r\n                        <th>Comando</th>\r\n                        <th>Envio</th>\r\n                        <th>Resultado</th>\r\n                        <th>Usuário</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.datahora}</td>\r\n                    <td>{user.comando}</td>\r\n                    <td>{user.envio}</td>\r\n                    <td>{user.resultado}</td>\r\n                    <td>{user.usuario}</td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>Usuários</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"usuarios\">\r\n                                <option value=\"\" defaultValue > Selecione o usuário... </option>\r\n                                <option value=\"servidor1\"> João Carlos </option>\r\n                                <option value=\"servidor2\"> Lucas Henrique </option>\r\n                                <option value=\"servidor3\"> Gabriel Oliveira </option>\r\n                                <option value=\"servidor4\"> Fernanda Avila </option>\r\n                                <option value=\"servidor5\"> Leticia Campos </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>Data inicial</label>\r\n                        <input type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"datainicial\"\r\n                            placeholder=\"Digite a data inicial...\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 col-md-4\">\r\n                    <div className=\"form-group\">\r\n                        <label>Data final</label>\r\n                        <input type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"datafinal\"\r\n                            placeholder=\"Digite a data final...\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.save(e)}>\r\n                        Pesquisar\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n               {this.renderForm()}\r\n               {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api.js'\r\nimport axios from 'axios'\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de Contratos',\r\n    subtitle: 'Busca de contratos por CPF.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\n//const baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', endereco: '', onu: '' },\r\n    list: [ ]\r\n}\r\n\r\nexport default class ContratosCpf extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        //axios(baseUrl).then(resp => {\r\n            //this.setState({ list: resp.data })\r\n        //})\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        //const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        //axios[method]( url, user )\r\n        //    .then(resp => {\r\n        //        const list = this.getUpdatedList(resp.data)\r\n        //        this.setState({ user: initialState.user, list })\r\n        //    })\r\n    }\r\n\r\n    busca(){\r\n        var cpf = document.getElementById('cpf').value;\r\n        if(cpf!==''){\r\n            this.setState({\r\n                list: [{ id: 1, endereco: 'Rua xyz', onu: '192.168.1.4' },\r\n                { id: 2, endereco: 'Av. xyz', onu: '192.168.4.7' },\r\n                { id: 3, endereco: 'Rua xyzasdfg', onu: '192.168.2.9' }]\r\n            })\r\n        }else{\r\n            \r\n        }\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        //axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n        //    const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n        //    this.setState({ list })\r\n        //})\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Contrato</th>\r\n                        <th>Endereço</th>\r\n                        <th>ONU</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.endereco}</td>\r\n                <td>{user.onu}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-retweet\" text=\"Conectar ONU\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>CPF*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"cpf\"\r\n                            placeholder=\"Digite o CPF...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.busca(e)}>\r\n                        Pesquisar\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Limpar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router'\r\nimport Home from '../components/home/Home'\r\nimport UserCrud from '../components/users/UserCrud'\r\nimport AlteraCanal from '../components/users/AlteraCanal'\r\nimport PPOE from '../components/users/PPOE'\r\nimport OnOffONU from '../components/users/OnOffONU'\r\nimport ListaONU from '../components/users/ListaONUs'\r\nimport ListaComandos from '../components/users/ListaComandos'\r\nimport ListaContratos from '../components/users/ContratosCpf'\r\n\r\nexport default props =>\r\n    <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/users' component={UserCrud} />\r\n        <Route path='/canal' component={AlteraCanal} />\r\n        <Route path='/ppoe' component={PPOE} />\r\n        <Route path='/onoff' component={OnOffONU} />\r\n        <Route path='/listaonu' component={ListaONU} />\r\n        <Route path='/listacomandos' component={ListaComandos} />\r\n        <Route path='/listacontratos' component={ListaContratos}/>\r\n        <Redirect from='*' to='/' />\r\n    </Switch>","import './Logo.css'\r\nimport React from 'react';\r\nimport logo from '../../assets/imgs/logoviareal.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props => \r\n    <aside className=\"logo\">\r\n            <Link to=\"/\" className=\"logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n    </aside>","import './Nav.css'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props =>\r\n    <aside className=\"menu-area\">\r\n        <nav className=\"menu\">\r\n            <Link to=\"/\">\r\n                <i className=\"fa fa-home mr-2\"></i> Início / Login\r\n            </Link>\r\n            <Link to=\"/listaonu\">\r\n                <i className=\"fa fa-list mr-2\"></i> Lista de ONUs\r\n            </Link>\r\n            <Link to=\"/listacomandos\">\r\n                <i className=\"fa fa-list mr-2\"></i> Lista de comandos\r\n            </Link>\r\n            <Link to=\"/users\">\r\n                <i className=\"fa fa-wifi mr-2\"></i> Configurar Wi-Fi\r\n            </Link>\r\n            <Link to=\"/canal\">\r\n                <i className=\"fa fa-wifi mr-2\"></i> Alterar canal\r\n            </Link>\r\n            <Link to=\"/ppoe\">\r\n                <i className=\"fa fa-user mr-2\"></i> Configuração PPoE\r\n            </Link>\r\n            <Link to=\"/listacontratos\">\r\n                <i className=\"fa fa-user mr-2\"></i> Busca de contratos\r\n            </Link>\r\n            <Link to=\"/onoff\">\r\n                <i className=\"fa fa-power-off mr-2\"></i> Habilita/Desabilita ONU\r\n            </Link>\r\n        </nav>\r\n    </aside>","import './Footer.css'\r\nimport React from 'react';\r\n\r\nexport default props =>\r\n    <footer className=\"footer\">\r\n        <span>\r\n            Desenvolvido com <strong> <span className=\"text-danger\">React</span></strong>\r\n        </span>\r\n    </footer>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport React from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Routes'\r\nimport Logo from '../components/templates/Logo'\r\nimport Nav from '../components/templates/Nav'\r\nimport Footer from '../components/templates/Footer'\r\n\r\n\r\nexport default props =>\r\n    <HashRouter>\r\n        <div className=\"app\">\r\n            <Logo />\r\n            <Nav />\r\n            <Routes />\r\n            <Footer />        \r\n        </div>\r\n    </HashRouter>\r\n    ","module.exports = __webpack_public_path__ + \"static/media/logoviareal.a5bb7cca.png\";"],"sourceRoot":""}